import{a as u,t as p,s as y,h as A,b as E}from"./xhrStatus.js";import{u as S}from"./media-manager-lab-previews-refresher.js";import{g as b}from"./form.js";import{g as T}from"./media-manager-config.js";const w=document.querySelectorAll("[data-media-manager-lab]");w.forEach(o=>{const t=o.querySelector("[data-status-area-container]");o.addEventListener("click",async function(n){const r=T(o);if(!r||!r.useXhr)return;const e=n.target.closest("[data-action]"),d=e==null?void 0:e.getAttribute("data-action");if(!d)return;n.preventDefault();const h=e.dataset.mediumId;if(!e)return;const a=e.closest("[data-xhr-form]"),g=(a==null?void 0:a.getAttribute("data-xhr-method"))??"post",m=C(d,e);if(!m){u(t,{type:"error",message:p("invalid_action")});return}y(t);try{const s=b(a),f=g.toUpperCase();["DELETE","PUT","PATCH"].includes(f)&&s.append("_method",f);const c=await fetch(m,{method:"POST",headers:{"X-CSRF-TOKEN":r.csrfToken,Accept:"application/json"},body:s}),l=await c.json();if(!c.ok){A(c,l,t);return}u(t,l),S(o,r,h,{})}catch(s){console.error("Error during upload:",s),u(t,{type:"error",message:p("upload_failed")})}finally{E(t)}})});function C(o,t,n){var i;return{"medium-restore":(i=t==null?void 0:t.dataset)==null?void 0:i.route}[o]||null}
